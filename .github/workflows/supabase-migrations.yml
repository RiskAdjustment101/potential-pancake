name: Deploy Supabase Migrations

on:
  push:
    branches: [main]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/config.toml'
      - '.github/workflows/supabase-migrations.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy migrations with Supabase CLI
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "üöÄ Deploying database migrations to Supabase..."
          
          # Login with access token
          supabase login --token "$SUPABASE_ACCESS_TOKEN"
          
          # Link to project with database password
          echo "Linking to project..."
          supabase link --project-ref lodmtemrzvmiihfoidrt --password "$SUPABASE_DB_PASSWORD"
          
          # Push migrations
          echo "Pushing migrations..."
          supabase db push --password "$SUPABASE_DB_PASSWORD"
          
          echo "‚úÖ Migrations deployment complete!"

      - name: Fallback instructions
        if: failure()
        run: |
          echo "‚ùå Automated deployment failed"
          echo ""
          echo "üìù Manual setup required:"
          echo "1. Go to: https://supabase.com/dashboard/project/lodmtemrzvmiihfoidrt/sql"
          echo "2. Run the SQL from: supabase/migrations/20240905000001_complete_setup.sql"
          echo ""
          echo "This will:"
          echo "‚úÖ Create all 4 tables"
          echo "‚úÖ Enable RLS"
          echo "‚úÖ Set up security policies"